{
  "info": {
    "name": "ResumeLetterAI API",
    "description": "Production-ready REST API for resume and cover letter generation platform.\n\n## Quick Start\n1. Import this collection into Postman\n2. Set up environment variables:\n   - `baseUrl`: http://localhost:3000/api/v1\n   - `authToken`: (will be auto-set after login)\n3. Run Authentication → Register/Login\n4. Token will be automatically saved\n5. Start testing other endpoints\n\n## Features\n- User authentication with JWT\n- Resume template management\n- Cover letter generation\n- User profile management\n- Review and rating system",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_postman_id": "resumeai-api-collection",
    "version": "1.0.0"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{authToken}}",
        "type": "string"
      }
    ]
  },
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            },
            "description": "Check if API is running and all services are healthy"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has status field', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData.status).to.eql('healthy');",
                  "});"
                ]
              }
            }
          ]
        }
      ],
      "description": "Health check endpoints"
    },
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Create a new user account"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 201', function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test('Response has access token', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.tokens).to.have.property('accessToken');",
                  "    ",
                  "    // Save token for future requests",
                  "    pm.environment.set('authToken', jsonData.data.tokens.accessToken);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Authenticate user and get access token"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Response has access token', function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.data.tokens).to.have.property('accessToken');",
                  "    ",
                  "    // Save tokens automatically",
                  "    pm.environment.set('authToken', jsonData.data.tokens.accessToken);",
                  "    pm.environment.set('refreshToken', jsonData.data.tokens.refreshToken);",
                  "    ",
                  "    console.log('✅ Auth token saved to environment');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Refresh Token",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Get new access token using refresh token"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "const jsonData = pm.response.json();",
                  "if (jsonData.accessToken) {",
                  "    pm.environment.set('authToken', jsonData.accessToken);",
                  "}"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Invalidate user session and tokens"
          },
          "response": [],
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "pm.test('Status code is 200', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "// Clear tokens on successful logout",
                  "pm.environment.unset('authToken');",
                  "pm.environment.unset('refreshToken');"
                ]
              }
            }
          ]
        }
      ],
      "description": "User authentication and authorization endpoints"
    },
    {
      "name": "Users",
      "item": [
        {
          "name": "Get My Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["users", "me"]
            },
            "description": "Retrieve authenticated user's profile information"
          },
          "response": []
        },
        {
          "name": "Update My Profile",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Smith\",\n  \"phone\": \"+8801712345678\",\n  \"bio\": \"Experienced software developer with 5+ years in web development\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/me",
              "host": ["{{baseUrl}}"],
              "path": ["users", "me"]
            },
            "description": "Update authenticated user's profile information"
          },
          "response": []
        },
        {
          "name": "Change Password",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"currentPassword\": \"SecurePass123!\",\n  \"newPassword\": \"NewSecurePass456!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/me/password",
              "host": ["{{baseUrl}}"],
              "path": ["users", "me", "password"]
            },
            "description": "Change user's password"
          },
          "response": []
        }
      ],
      "description": "User profile management endpoints"
    },
    {
      "name": "Templates",
      "item": [
        {
          "name": "List Templates",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/templates?page=1&limit=20&category=professional&sort=newest",
              "host": ["{{baseUrl}}"],
              "path": ["templates"],
              "query": [
                {
                  "key": "page",
                  "value": "1",
                  "description": "Page number"
                },
                {
                  "key": "limit",
                  "value": "20",
                  "description": "Items per page"
                },
                {
                  "key": "category",
                  "value": "professional",
                  "description": "Filter by category",
                  "disabled": true
                },
                {
                  "key": "sort",
                  "value": "newest",
                  "description": "Sort order (newest, oldest, popular, rating)",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "",
                  "description": "Search by name or tags",
                  "disabled": true
                }
              ]
            },
            "description": "Get paginated list of resume templates"
          },
          "response": []
        },
        {
          "name": "Create Template",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Modern Professional Template\",\n  \"description\": \"Clean and modern design perfect for professionals in any industry. ATS-friendly format.\",\n  \"category\": \"professional\",\n  \"tags\": [\"modern\", \"clean\", \"ats-friendly\", \"minimalist\"],\n  \"isPremium\": false,\n  \"price\": 0\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/templates",
              "host": ["{{baseUrl}}"],
              "path": ["templates"]
            },
            "description": "Create a new resume template (Admin/Creator only)"
          },
          "response": []
        },
        {
          "name": "Get Template by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}"]
            },
            "description": "Retrieve detailed information about a specific template"
          },
          "response": []
        },
        {
          "name": "Update Template",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Modern Professional\",\n  \"description\": \"Updated description with more details\",\n  \"tags\": [\"modern\", \"professional\", \"updated\"],\n  \"isPremium\": true,\n  \"price\": 9.99\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}"]
            },
            "description": "Update template information (Admin/Creator only)"
          },
          "response": []
        },
        {
          "name": "Delete Template",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}"]
            },
            "description": "Delete a template (Admin only)"
          },
          "response": []
        },
        {
          "name": "Get Template Preview",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}/preview",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}", "preview"]
            },
            "description": "Get template preview image or HTML"
          },
          "response": []
        }
      ],
      "description": "Resume and cover letter template management"
    },
    {
      "name": "Reviews",
      "item": [
        {
          "name": "Get Template Reviews",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}/reviews?page=1&limit=20&sort=newest",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}", "reviews"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "20"
                },
                {
                  "key": "sort",
                  "value": "newest",
                  "description": "newest, oldest, helpful, rating_high, rating_low",
                  "disabled": true
                }
              ]
            },
            "description": "Get paginated list of reviews for a template"
          },
          "response": []
        },
        {
          "name": "Create Review",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rating\": 5,\n  \"comment\": \"Excellent template! Very professional and easy to customize. The layout is clean and modern. Highly recommended for anyone looking for a professional resume.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/templates/{{templateId}}/reviews",
              "host": ["{{baseUrl}}"],
              "path": ["templates", "{{templateId}}", "reviews"]
            },
            "description": "Add a review for a template"
          },
          "response": []
        },
        {
          "name": "Update Review",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"rating\": 4,\n  \"comment\": \"Updated review: Still a great template, but found a few minor issues with mobile responsiveness.\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/reviews/{{reviewId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reviews", "{{reviewId}}"]
            },
            "description": "Update user's own review"
          },
          "response": []
        },
        {
          "name": "Delete Review",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{authToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/reviews/{{reviewId}}",
              "host": ["{{baseUrl}}"],
              "path": ["reviews", "{{reviewId}}"]
            },
            "description": "Delete user's own review (or admin)"
          },
          "response": []
        }
      ],
      "description": "Template reviews and ratings"
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000/api/v1",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "templateId",
      "value": "507f1f77bcf86cd799439011",
      "type": "string"
    },
    {
      "key": "reviewId",
      "value": "507f1f77bcf86cd799439011",
      "type": "string"
    }
  ]
}